net.ipv4.ip_forward=1

##net.ipv4.conf.utun.rp_filter = 0

##net.ipv4.conf.lo.rp_filter = 0
##net.ipv4.conf.default.rp_filter = 0
##net.ipv4.conf.docker0.rp_filter = 0

#net.ipv4.tcp_fastopen = 3
# 启用 TIME_WAIT 复用，使得结束 TIEM_WAIT 状态的套接字的端口可以立刻被其他套接字使用(recommond client not server)
#net.ipv4.tcp_tw_reuse = 1
# 缩短套接字处于 TIME_WAIT 的时间， 60s -> 15s
#net.ipv4.tcp_fin_timeout = 15
#net.ipv4.tcp_syn_retries = 2
#net.ipv4.tcp_synack_retries = 0

# 关闭慢启动重启(Slow-Start Restart), SSR 对于会出现突发空闲的长周期 TLS 连接有很大的负面影响
#net.ipv4.tcp_slow_start_after_idle = 0

# 启用 MTU 探测，在链路上存在 ICMP 黑洞时候有用（大多数情况是这样
#net.ipv4.tcp_mtu_probing = 1

# 优化 nf_conntrack 参数，防止服务器出现大量短链接的时候出现丢包
#net.netfilter.nf_conntrack_max=1048576
#net.nf_conntrack_max=1048576
#net.netfilter.nf_conntrack_tcp_timeout_fin_wait=30
#net.netfilter.nf_conntrack_tcp_timeout_time_wait=30
#net.netfilter.nf_conntrack_tcp_timeout_close_wait=15
#net.netfilter.nf_conntrack_tcp_timeout_established=300

# made for disabled IPv6 in 08/08/2022

#net.ipv6.conf.all.disable_ipv6 = 1
#net.ipv6.conf.default.disable_ipv6 = 1
##net.ipv6.conf.lo.disable_ipv6 = 1

# ----------------------------------

vm.swappiness = 10

net.bridge.bridge-nf-call-ip6tables = 0
net.bridge.bridge-nf-call-iptables = 0
net.bridge.bridge-nf-call-arptables = 0
##net.bridge.bridge-nf-filter-vlan-tagged = 0
##net.bridge.bridge-nf-filter-pppoe-tagged = 0

# ----------------
# 01/26/23
kernel.sysrq=1
#net.core.netdev_max_backlog = 6000
#net.ipv4.tcp_max_syn_backlog = 8192
#net.ipv4.tcp_max_tw_buckets = 2000000
# 修改 tcp keepalive 默认超时时间
#net.ipv4.tcp_keepalive_time = 60
# 缩短 tcp keepalive 探测间隔时间，同下
#net.ipv4.tcp_keepalive_intvl = 10
# 减小 tcp keepalive 探测次数，可以即时释放长链接
#net.ipv4.tcp_keepalive_probes = 6

net.core.default_qdisc = cake
net.ipv4.tcp_congestion_control = bbr


